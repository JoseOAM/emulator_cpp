//#include "Main.h"
//
//int cpuTest()
//{
//    const char* path = "E:\\Code\\emulator_cpp\\tests\\color_demo.txt";
//    FrameBuffer* frameBuffer = new FrameBuffer(FRAME_BUFFER_SIZE);
//    Memory* memory = new Memory(MEMORY_SIZE);
//    Bus* bus = new Bus(frameBuffer, memory);
//    ProgramUtils* programUtils = new ProgramUtils(bus);
//    CPU* cpu = NULL;
//    int fileSize = 0;
//    try {
//        int instructions[42] = { 0b11111110000000010000000100010011, 0b00000000000100010010111000100011, 0b00000000100000010010110000100011, 0b00000010000000010000010000010011, 0b11111111001101001001011110110111, 0b00000000000001111000011110010011, 0b01001011111001111000011110010011, 0b11111110111101000010000000100011, 0b00000000000000000001011110110111, 0b00000000000001111000011110010011, 0b00000000010001111000011110010011, 0b11111110111101000010010000100011, 0b00000000000000000001011110110111, 0b00000000000001111000011110010011, 0b11111110111101000010001000100011, 0b11111110000001000010011000100011, 0b00000010100000000000000001101111, 0b11111110110001000010011110000011, 0b00000000001001111001011110010011, 0b11111110100001000010011100000011, 0b00000000111101110000011110110011, 0b11111110000001000010011100000011, 0b00000000111001111010000000100011, 0b11111110110001000010011110000011, 0b00000000000101111000011110010011, 0b11111110111101000010011000100011, 0b11111110110001000010011100000011, 0b00000000000000010011011110110111, 0b00000000000001111000011110010011, 0b10111111111101111000011110010011, 0b11111100111001111101011011100011, 0b11111110010001000010011110000011, 0b00000000000100000000011100010011, 0b00000000111001111010000000100011, 0b00000000000000000000011110010011, 0b00000000111100000000010100110011, 0b00000001110000010010000010000011, 0b00000001100000010010010000000011, 0b00000010000000010000000100010011, 0b00000000000000001000000001100111, };
//        printf("Program size: %d\n", fileSize);
//        for (int i = 0; i < fileSize; i++) {
//            print_binary(instructions[i]);
//        }
//        printf("\n");
//        programUtils->writeProgramInMemory(instructions, fileSize);
//        cpu = new CPU(bus, memory);
//        std::thread cpuThread([&cpu]() {
//            cpu->run();
//            });
//    }
//    catch (const std::exception& e) {
//        printf("Error: %s\n", e.what());
//    }
//
//    return 0;
//}